name: Build

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    permissions: write-all
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ github.event_name == 'release' && 'prod' || 'dev' }}
          cache-directories: "${{env.CARGO_TARGET_DIR}}"

      - name: Download libmem
        uses: dsaltares/fetch-gh-release-asset@master
        with:
            repo: 'rdbo/libmem'
            file: "libmem-.*-x86_64-windows-msvc-static-mt\\.tar\\.gz"
            regex: true

      - name: Setup libmem
        run: |
            $name = Get-ChildItem -Path *.tar.gz
            tar -xvzf $name
            $name = $name.ToString()
            $name = $name.Substring(0, $name.Length - 7)
            cd "$name/lib/release"
            New-Item -ItemType Directory -Force -Path "$env:ProgramFiles\libmem\lib"
            Copy-Item "libmem.lib" -Destination "$env:ProgramFiles\libmem\lib"

      - name: Build Release
        if: github.event_name == 'release'
        run: cargo build --release

      - name: Build Debug
        if: github.event_name != 'release'
        run: cargo build

      - name: Upload Artifacts
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            ${{env.CARGO_TARGET_DIR}}/*/*.dll

      - name: Zip files up
        if: github.event_name == 'release'
        run: |
          Get-ChildItem -Path $env:CARGO_TARGET_DIR/*/*.dll | Compress-Archive -CompressionLevel Optimal -DestinationPath "my-plugin-x64.zip"

      - name: Attach assets to release
        if: github.event_name == 'release'
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.zip"
          draft: false
          release_id: ${{ github.event.release.id }}
