name: Build

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    permissions: write-all
    runs-on: windows-2022

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ github.event_name == 'release' && 'prod' || 'dev' }}
          workspaces: "rust -> target"

      - name: Build Release
        if: github.event_name == 'release'
        working-directory: rust
        run: cargo build -p native-memory-scripter --release

      - name: Build Debug
        if: github.event_name != 'release'
        working-directory: rust
        run: cargo build -p native-memory-scripter --profile ci

      - name: Upload Artifacts
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            rust/target/*/*.dll

      - name: UPX
        if: github.event_name == 'release'
        uses: crazy-max/ghaction-upx@v3.0.0
        with:
            version: latest
            files: |
                rust/target/*/*.dll
            args: --best

      - name: Zip files up
        if: github.event_name == 'release'
        run: |
          Get-ChildItem -Path rust/target/*/*.dll | Compress-Archive -CompressionLevel Optimal -DestinationPath "native-memory-scripter-x64.zip"

      - name: Attach assets to release
        if: github.event_name == 'release'
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.zip"
          draft: false
          release_id: ${{ github.event.release.id }}
